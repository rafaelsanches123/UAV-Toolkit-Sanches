#Author: Jesimar da Silva Arantes
#Date: 16/08/2017
#Last Update: 17/08/2018
#Description: Properties file of IFA, MOSA and GCS systems.
#Descricao: Arquivo de propriedades dos sistemas IFA, MOSA, GCS e S2DK.

#----------------------------SOFTWARE MODULES---------------------------

#===========================GLOBAL PARAMETERS===========================

#operation mode: options [SITL_LOCAL, SITL_CC, REAL_FLIGHT]
#SITL_LOCAL     -> Software-In-The-Loop on PC.
#SITL_CC        -> Software-In-The-Loop on Companion Computer (CC).
#REAL_FLIGHT    -> Real Flight on the real drone.
prop.global.operation_mode=SITL_LOCAL

#type of Companion Computer (CC) used in this experiment.
#EDISON     -> Companion Computer model Intel Edison
#RASPBERRY  -> Companion Computer model Raspberry Pi
prop.global.type_cc=RASPBERRY

#type of AutoPilot (AP) used in this experiment.
#PIXHAWK    -> AutoPilot model Pixhawk
#APM        -> AutoPilot model APM
prop.global.type_ap=APM

#type of aircraft: options [ROTARY_WING, FIXED_WING]
#ROTARY_WING   -> rotary wing aircraft - quadricopter - iDroneAlpha
#FIXED_WING    -> fixed wing aircraft - Ararinha
prop.global.type_aircraft=ROTARY_WING

#directory with the mission to be executed by drone (files to be copied to system) [pos-iros1, pos-iros3, campus2ccqsp]
prop.global.mission.dir=Missions/pos-iros3

#relative altitude of the mission (in meters)
prop.global.mission.altitude_relative=5.0

#frequency of updating the autopilot data to be recorded in the log file (in hertz).
#from 2 hertz is a good upgrade rate.
prop.global.freq_update_data_ap=2

#directory where several mission configuration files and security files are stored.
prop.global.dir_files=../Modules-Global/Files/

#name of the feature mission file where the buzzer, camera photo, camera video and spraying is defined.
prop.global.file.feature_mission=featureMission.txt

#name of the reference geographic coordinates file.
#File used by IFA (replanner) and MOSA (planner), but not used by Controller and FixedRoute.
prop.global.file.geo_base=geoBase.txt

#Represents the ip of the machine where the IFA system is running [localhost, 192.168.205.220, 192.168.0.2, 192.168.43.2].
prop.global.comm.host_ifa=localhost

#Represents the ip of the machine where the MOSA system is running [localhost, 192.168.205.220, 192.168.0.2, 192.168.43.2].
prop.global.comm.host_mosa=localhost

#ip on the computer where the UAV-S2DK is running.
prop.global.comm.host_s2dk=localhost

#port used in communication between IFA and MOSA.
prop.global.comm.port_network_ifa_mosa=5555

#port used in communication between IFA and UAV-GCS.
prop.global.comm.port_network_ifa_gcs=5556

#port used in communication between MOSA and UAV-GCS.
prop.global.comm.port_network_mosa_gcs=5557

#represents the network port of mavproxy for connection (usually 14551 or 14550).
prop.global.comm.port_network_mavproxy=14551

#port used in communication between IFA or MOSA with UAV-S2DK (HTTP request server).
prop.global.comm.port_network_s2dk=50000

#----------------------------HARDWARE MODULES---------------------------

#has camera connected on the drone [TRUE, FALSE]
prop.hw.sensor.has_camera=TRUE

#has sonar connected on the drone [TRUE, FALSE]
prop.hw.sensor.has_sonar=FALSE

#has power module connected on the drone [TRUE, FALSE]
prop.hw.sensor.has_powermodule=TRUE

#has temperature sensor connected on the drone [TRUE, FALSE]
prop.hw.sensor.has_temperature_sensor=FALSE

#has buzzer connected on the drone [TRUE, FALSE]
prop.hw.actuator.has_buzzer=FALSE

#has parachute connected on the drone [TRUE, FALSE]
prop.hw.actuator.has_parachute=FALSE

#has LED connected on the drone [TRUE, FALSE]
prop.hw.actuator.has_led=FALSE

#has spraying connected on the drone [TRUE, FALSE]
prop.hw.actuator.has_spraying=FALSE

#---------------------------------SENSORS-------------------------------

#===========================CAMERA PARAMETERS===========================

#directory where is the used camera system
prop.hw.sensor.camera.dir=../Modules-Global/Camera/

#duration of the video in seconds (integer)
prop.hw.sensor.camera.video.time=120

#number of photos in sequence (integer)
prop.hw.sensor.camera.photo_in_sequence.number=4

#delay between two photos in seconds (integer)
prop.hw.sensor.camera.photo_in_sequence.delay=2

#============================SONAR PARAMETERS===========================

#directory where is the used sonar system
prop.hw.sensor.sonar.dir=../Modules-Global/Sonar/

#pin used by the sonar sensor trig
prop.hw.sensor.sonar.pin_trig=40

#pin used by the sonar sensor echo
prop.hw.sensor.sonar.pin_echo=38

#=========================POWER MODULE PARAMETERS=======================

#minimum level of battery to detect it as fault, then an emergency landing mechanism is activated
prop.hw.sensor.powermodule.level_min_battery=25

#======================TEMPERATURE SENSOR PARAMETERS====================

#directory where is the used buzzer system
prop.hw.sensor.temperature.dir=../Modules-Global/TemperatureSensor/

#maximum level of temperature of battery to detect it as fault, then an emergency landing mechanism is activated
prop.hw.sensor.temperature.level_max_temperature=80

#-------------------------------ACTUATORS-------------------------------

#===========================BUZZER PARAMETERS===========================

#directory where is the used buzzer system
prop.hw.actuator.buzzer.dir=../Modules-Global/Buzzer/

#signal pin used to connect the buzzer on the board (CC)
prop.hw.actuator.buzzer.pin=8

#===========================PARACHUTE PARAMETERS========================

#directory where is the used parachute system
prop.hw.actuator.parachute.dir=../Modules-Global/Parachute/

#=============================LED PARAMETERS============================

#directory where is the used LED system
prop.hw.actuator.led.dir=../Modules-Global/LED/

#==========================SPRAYING PARAMETERS==========================

#directory where is the used spraying system
prop.hw.actuator.spraying.dir=../Modules-Global/Spraying/

#--------------------------------AIRCRAFT-------------------------------

#name of the aircraft                    [iDroneAlpha: iDroneAlpha, Ararinha: Ararinha]
prop.aircraft.name=iDroneAlpha

#speed cruize of the aircraft (in m/s)   [iDroneAlpha: 2.0, Ararinha: 20.0]
prop.aircraft.speed_cruize=2.0

#speed max of the aircraft (in m/s)      [iDroneAlpha: 10.0, Ararinha: 30.0]
prop.aircraft.speed_max=10.0

#mass of the aircraft (in kg)            [iDroneAlpha: 1.100, Ararinha: 2.828]
prop.aircraft.mass=1.100

#payload of the aircraft (in kg)         [iDroneAlpha: 0.400, Ararinha: 0.600]
prop.aircraft.payload=0.400

#endurance of the aircraft (in seconds)  [iDroneAlpha: 420.0, Ararinha: 900.0]
prop.aircraft.endurance=420.0

#----------------------------SOFTWARE MODULES---------------------------

#-----------------------------PROPERTIES GCS----------------------------

#Enable Google Maps feature (google maps need the internet to work)
prop.gcs.internet.has_googlemaps=true

#Evaluates whether the Oracle Drone DataBase system exists.
prop.gcs.od.has_db=false

#Represents the ip of the machine where the Oracle Drone DB is running [localhost, 192.168.205.193].
prop.gcs.od.host_od=192.168.205.105

#Represents the network port used to communicate with the Oracle Drone DB.
prop.gcs.od.port_od_gcs=3306

#Represents the user email of the Oracle Drone system to connect to the DB in real time.
prop.gcs.od.user_email=jesimar.arantes@gmail.com

#-----------------------------PROPERTIES IFA----------------------------

#===========================GLOBAL PARAMETERS===========================

#system run by drone: options [REPLANNER, FIXED_ROUTE, CONTROLLER]
#REPLANNER       -> IFA uses a path replanner
#FIXED_ROUTE     -> IFA loads a fixed route
#CONTROLLER      -> IFA uses a controller for the drone (voice or keyboard)
prop.ifa.global.system_exec=REPLANNER

#=========================REPLANNER PARAMETERS==========================

#local of method execution: options [ONBOARD, OFFBOARD]
#ONBOARD        -> executed on the aircraft's on-board computer (CC)
#OFFBOARD       -> running on the computer on ground (GCS)
prop.ifa.replanner.local_exec=ONBOARD

#path replanner method used by drone: options [DE4s, GH4s, GA4s, MPGA4s, MS4s, GA-GA-4s, GA-GH-4s, Fixed-Route4s]
#DE4s           -> Differential Evolutionary 4 security				supported by ONBOARD and OFFBOARD
#GH4s           -> Greedy Heuristic 4 security						supported by ONBOARD and OFFBOARD
#GA4s           -> Genetic Algorithm 4 security						supported by ONBOARD and OFFBOARD
#MPGA4s         -> Multi-Population Genetic Algorithm 4 security	supported by ONBOARD and OFFBOARD
#MS4s           -> MultiStart 4 security							supported by ONBOARD and OFFBOARD
#GA-GA-4s       -> Two GA 4 security in parallel					supported only by ONBOARD
#GA-GH-4s       -> One GA and One GH 4 security in parallel			supported only by ONBOARD
#Fixed-Route4s  -> IFA loads a fixed route from a set of routes		supported only by ONBOARD
prop.ifa.replanner.method=MPGA4s

#command to execute the path replanner
prop.ifa.replanner.cmd_exec=./exec-replanner.sh

#method execution time (in seconds) [used only DE4s, GA4s, MPGA4s]
prop.ifa.replanner.time_exec=1.0

#number of waypoints used in the path replanner method
prop.ifa.replanner.number_waypoints=30

#risk allocated during the mission (delta)
prop.ifa.replanner.delta=0.01

#type of altitude decay of the emergency route: options [CONSTANT, LINEAR]
#CONSTANT  -> altitude does not change, so the drone guides itself to the region, but does not descend.
#LINEAR    -> altitude decay linearly.
prop.ifa.replanner.type_altitude_decay=CONSTANT

#=====================FIXED_ROUTE_STATIC PARAMETERS=====================

#directory containing the security's fixed route files
prop.ifa.fixed_route.dir=../Modules-IFA/Fixed-Route-Static4s/

#fixed route file name [route-emergencial.txt]
prop.ifa.fixed_route.file_waypoints=route-emergencial.txt

#-----------------------------PROPERTIES MOSA---------------------------

#===========================GLOBAL PARAMETERS===========================

#system run by drone: options [PLANNER, FIXED_ROUTE]
#PLANNER           -> MOSA uses a path planner
#FIXED_ROUTE       -> MOSA loads a fixed route
prop.mosa.global.system_exec=PLANNER

#===========================PLANNER PARAMETERS==========================

#local of method execution: options [ONBOARD, OFFBOARD]
#ONBOARD        -> executed on the aircraft's on-board computer (CC)
#OFFBOARD       -> running on the computer on ground (GCS)
prop.mosa.planner.local_exec=OFFBOARD

#path planner method used by drone: options [HGA4m, CCQSP4m]
#HGA4m         -> Hybrid Genetic Algorithm 4 mission  					supported by ONBOARD and OFFBOARD
#CCQSP4m       -> Chance Constraint Qualitative State Plan 4 mission 	supported by ONBOARD and OFFBOARD
#Commentary: HGA4m and CCQSP4m don't work in ARM architecture, i.e. Raspberry Pi
prop.mosa.planner.method=CCQSP4m

#command to execute the path planner (need arguments "local" or "edison")
prop.mosa.planner.cmd_exec=./exec-planner.sh

#========================PLANNER HGA4m PARAMETERS=======================

#mission processing location: options [GROUND, GROUND_AND_AIR, AIR]
#GROUND          -> supported by ONBOARD and OFFBOARD
#GROUND_AND_AIR  -> supported only by ONBOARD
#AIR             -> supported only by ONBOARD
prop.mosa.planner.hga4m.local_exec_processing=GROUND

#name of the waypoint file containing the mission
prop.mosa.planner.hga4m.file_mission=waypointsMission.txt

#method execution time (in seconds)
#Format 1: time
#Format 2: [time1,time2,...timeN] voo 30.0,40.0,20.0
prop.mosa.planner.hga4m.time_exec=[4.0,4.0,4.0,4.0,4.0,6.0]

#risk allocated during the mission (delta)
prop.mosa.planner.hga4m.delta=0.08

#maximum drone speed used in the model (m/s)
prop.mosa.planner.hga4m.max_velocity=2.0

#maximum drone control used in the model (m/(s*s))
prop.mosa.planner.hga4m.max_control=1.0

#=======================PLANNER CCQSP4m PARAMETERS======================

#number of waypoints used by method
prop.mosa.planner.ccqsp4m.waypoints=60

#risk allocated during the mission (delta)
prop.mosa.planner.ccqsp4m.delta=0.04

#=========================FIXED ROUTE PARAMETERS========================

#directory containing the mission's fixed route files
prop.mosa.fixed_route.dir=../Modules-MOSA/Fixed-Route4m/

#fixed route file name [route-4wp.txt, route-iros-case1] route-campus2.txt
prop.mosa.fixed_route.file_waypoints=route-campus2-onofre.txt

#fixed route is dynamic: options [TRUE, FALSE]
#TRUE  -> change the drone route in the air
#FALSE -> only follows the default route
prop.mosa.fixed_route.is_dynamic=FALSE

#file name of the fixed route with change of route if the route is dynamic
prop.mosa.fixed_route.file_waypoints_dyn=route-4wp-dyn.txt
